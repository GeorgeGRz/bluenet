/* Linker script to configure memory regions. */

SEARCH_DIR(.)
GROUP(-lgcc -lc -lnosys)

INCLUDE "nrf_symbols.ld"

IPC_BLOCK_SIZE = 0x30;

MEMORY
{
  /* Without debug: FLASH (rx) : ORIGIN = 0x76000, LENGTH = 0x8000 */
  /* With debug:    FLASH (rx) : ORIGIN = 0x71000, LENGTH = 0xd000 */
  /* FLASH (rx) : ORIGIN = 0x71000, LENGTH = 0xd000 */
  /* Without gc-sections: FLASH (rx) : ORIGIN = 0x68000, LENGTH = 0x10000 */
  FLASH (rx) : ORIGIN = BOOTLOADER_START_ADDRESS, LENGTH = BOOTLOADER_LENGTH
  IPC0 (rx) : ORIGIN = IPC_START_ADDRESS + IPC_BLOCK_SIZE * 0, LENGTH = IPC_BLOCK_SIZE
  IPC1 (rx) : ORIGIN = IPC_START_ADDRESS + IPC_BLOCK_SIZE * 1, LENGTH = IPC_BLOCK_SIZE
  IPC2 (rx) : ORIGIN = IPC_START_ADDRESS + IPC_BLOCK_SIZE * 2, LENGTH = IPC_BLOCK_SIZE
  IPC3 (rx) : ORIGIN = IPC_START_ADDRESS + IPC_BLOCK_SIZE * 3, LENGTH = IPC_BLOCK_SIZE
  IPC4 (rx) : ORIGIN = IPC_START_ADDRESS + IPC_BLOCK_SIZE * 4, LENGTH = IPC_BLOCK_SIZE
  RAM (rwx) :  ORIGIN = 0x200057b8, LENGTH = 0xa848
  mbr_params_page (r) : ORIGIN = 0x0007E000, LENGTH = 0x1000
  bootloader_settings_page (r) : ORIGIN = 0x0007F000, LENGTH = 0x1000
  uicr_mbr_params_page (r) : ORIGIN = 0x10001018, LENGTH = 0x4
  uicr_bootloader_start_address (r) : ORIGIN = 0x10001014, LENGTH = 0x4
}

SECTIONS
{
  .mbr_params_page(NOLOAD) :
  {
    PROVIDE(__start_mbr_params_page = .);
    KEEP(*(SORT(.mbr_params_page*)))
    PROVIDE(__stop_mbr_params_page = .);
  } > mbr_params_page
  .bootloader_settings_page(NOLOAD) :
  {
    PROVIDE(__start_bootloader_settings_page = .);
    KEEP(*(SORT(.bootloader_settings_page*)))
    PROVIDE(__stop_bootloader_settings_page = .);
  } > bootloader_settings_page
  .uicr_mbr_params_page :
  {
    PROVIDE(__start_uicr_mbr_params_page = .);
    KEEP(*(SORT(.uicr_mbr_params_page*)))
    PROVIDE(__stop_uicr_mbr_params_page = .);
  } > uicr_mbr_params_page
  .uicr_bootloader_start_address :
  {
    PROVIDE(__start_uicr_bootloader_start_address = .);
    KEEP(*(SORT(.uicr_bootloader_start_address*)))
    PROVIDE(__stop_uicr_bootloader_start_address = .);
  } > uicr_bootloader_start_address
}

SECTIONS
{
  . = ALIGN(4);
  .mem_section_dummy_ram :
  {
  }
  .log_dynamic_data :
  {
    PROVIDE(__start_log_dynamic_data = .);
    KEEP(*(SORT(.log_dynamic_data*)))
    PROVIDE(__stop_log_dynamic_data = .);
  } > RAM
  .log_filter_data :
  {
    PROVIDE(__start_log_filter_data = .);
    KEEP(*(SORT(.log_filter_data*)))
    PROVIDE(__stop_log_filter_data = .);
  } > RAM
  .fs_data :
  {
    PROVIDE(__start_fs_data = .);
    KEEP(*(.fs_data))
    PROVIDE(__stop_fs_data = .);
  } > RAM

} INSERT AFTER .data;

SECTIONS
{
  .mem_section_dummy_rom :
  {
  }
  .crypto_data :
  {
    PROVIDE(__start_crypto_data = .);
    KEEP(*(SORT(.crypto_data*)))
    PROVIDE(__stop_crypto_data = .);
  } > FLASH
    .nrf_queue :
  {
    PROVIDE(__start_nrf_queue = .);
    KEEP(*(.nrf_queue))
    PROVIDE(__stop_nrf_queue = .);
  } > FLASH
  .dfu_trans :
  {
    PROVIDE(__start_dfu_trans = .);
    KEEP(*(SORT(.dfu_trans*)))
    PROVIDE(__stop_dfu_trans = .);
  } > FLASH
    .svc_data :
  {
    PROVIDE(__start_svc_data = .);
    KEEP(*(.svc_data))
    PROVIDE(__stop_svc_data = .);
  } > FLASH
  .log_const_data :
  {
    PROVIDE(__start_log_const_data = .);
    KEEP(*(SORT(.log_const_data*)))
    PROVIDE(__stop_log_const_data = .);
  } > FLASH
    .nrf_balloc :
  {
    PROVIDE(__start_nrf_balloc = .);
    KEEP(*(.nrf_balloc))
    PROVIDE(__stop_nrf_balloc = .);
  } > FLASH
  .sdh_ble_observers :
  {
    PROVIDE(__start_sdh_ble_observers = .);
    KEEP(*(SORT(.sdh_ble_observers*)))
    PROVIDE(__stop_sdh_ble_observers = .);
  } > FLASH
  .log_backends :
  {
    PROVIDE(__start_log_backends = .);
    KEEP(*(SORT(.log_backends*)))
    PROVIDE(__stop_log_backends = .);
  } > FLASH
  .sdh_stack_observers :
  {
    PROVIDE(__start_sdh_stack_observers = .);
    KEEP(*(SORT(.sdh_stack_observers*)))
    PROVIDE(__stop_sdh_stack_observers = .);
  } > FLASH
  .sdh_req_observers :
  {
    PROVIDE(__start_sdh_req_observers = .);
    KEEP(*(SORT(.sdh_req_observers*)))
    PROVIDE(__stop_sdh_req_observers = .);
  } > FLASH
  .sdh_state_observers :
  {
    PROVIDE(__start_sdh_state_observers = .);
    KEEP(*(SORT(.sdh_state_observers*)))
    PROVIDE(__stop_sdh_state_observers = .);
  } > FLASH
  .sdh_soc_observers :
  {
    PROVIDE(__start_sdh_soc_observers = .);
    KEEP(*(SORT(.sdh_soc_observers*)))
    PROVIDE(__stop_sdh_soc_observers = .);
  } > FLASH
  .ipc_handler0 :
  {
	  PROVIDE(__start_ipc_handler0 = .);
	  KEEP(*(SORT(.ipc_handler0*)))
	  PROVIDE(__stop_ipc_handler0 = .);
  } > IPC0
  .ipc_handler1 :
  {
	  PROVIDE(__start_ipc_handler1 = .);
	  KEEP(*(SORT(.ipc_handler1*)))
	  PROVIDE(__stop_ipc_handler1 = .);
  } > IPC1
  .ipc_handler2 :
  {
	  PROVIDE(__start_ipc_handler2 = .);
	  KEEP(*(SORT(.ipc_handler2*)))
	  PROVIDE(__stop_ipc_handler2 = .);
  } > IPC2
  .ipc_handler3 :
  {
	  PROVIDE(__start_ipc_handler3 = .);
	  KEEP(*(SORT(.ipc_handler3*)))
	  PROVIDE(__stop_ipc_handler3 = .);
  } > IPC3
  .ipc_handler4 :
  {
	  PROVIDE(__start_ipc_handler4 = .);
	  KEEP(*(SORT(.ipc_handler4*)))
	  PROVIDE(__stop_ipc_handler4 = .);
  } > IPC4

} INSERT AFTER .text

INCLUDE "nrf_common.ld"
